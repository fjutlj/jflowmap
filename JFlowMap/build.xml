<project name="JFlowMap" basedir="." default="build">

	<taskdef resource="proguard/ant/task.properties" classpath="tools/proguard.jar" />

	<property file="build.properties"/>

    <property name="app.name" value="jflowmap"/>
    <property name="cert.name" value="JFlowMap"/>
	<property name="path.src" value="src"/>
	<property name="path.classes" value="bin"/>
	<property name="path.lib" value="lib"/>
	<property name="path.build" value="demo"/>
	<property name="mainclass" value="jflowmap.JFlowMapMain"/>

    <!--
    <target name="build-prod">
        <antcall target="_build">
           <param name="mode" value="prod"/>
        </antcall>
        <antcall target="sign"/>
    </target>

   <target name="build-preloaded-datasets-xjar">
        <antcall target="_build">
            <param name="mainclass" value="jflowmap.FlowMapPreloadedDataMain"/>
            <param name="mode" value="prod"/>
        	<param name="include.data" value="true"/>
        </antcall>
    </target>

   <target name="build-duotimeline-xjar">
        <antcall target="_build">
            <param name="app.name" value="duotimeline"/>
            <param name="mainclass" value="jflowmap.DuoTimelineMain"/>
            <param name="mode" value="prod"/>
            <param name="include.data.explicit" value="data/refugees/refugees_1975-2008.xml.gz,data/refugees/countries-areas.xml.gz"/>
        </antcall>
    </target>
    -->

   <target name="build">
        <antcall target="_build">
            <!--param name="app.name" value="duotimeline-applet"/-->
            <param name="mode" value="applet"/>
            <param name="include.applet.meta-inf" value="true"/>
        </antcall>
   	<!--
        <antcall target="sign">
            <param name="app.name" value="duotimeline-applet"/>
        </antcall>
        -->
    </target>

	<target name="_build" depends="mkdirs, compile, make-jar, proguard, add-manifest" />
	<!--
	<target name="_build" depends="mkdirs, clean, compile, make-jar, proguard, add-manifest" />
	-->

    
	<path id="libs-classpath">
        <fileset dir="${path.lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

	<path id="master-classpath">
        <fileset dir="${path.lib}">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${path.classes}"/>
	</path>

	<target name="mkdirs">
		<mkdir dir="${path.classes}"/>
		<mkdir dir="${path.build}"/>
	</target>

	<target name="compile">
		<javac destdir="${path.classes}" failonerror="true" debug="true" target="1.6">
			<src path="${path.src}"/>
			<classpath refid="master-classpath"/>
		</javac>
		<copy todir="${path.classes}" verbose="true">
			<fileset dir="${path.src}">
		        <include name="**/images/*.*"/>
			</fileset>
        </copy>
	</target>

	<target name="clean">
		<delete includeEmptyDirs="true">
			<fileset dir="${path.classes}">
				<include name="**/*.class"/>
			</fileset>
		</delete>
	</target>

	<target name="proguard">		
		<proguard configuration="proguard.cfg">
            <libraryjar path="${java.home}/lib/rt.jar"/>
            <injar refid="libs-classpath" filter="!META-INF/MANIFEST.MF,!extras.manifest,!**/*.jj"/>
            <injar path="${path.build}/${app.name}-no-libs.jar"/>
            <outjar path="${path.build}/${app.name}.jar"/>
		</proguard>
		<delete file="${path.build}/${app.name}-no-libs.jar"/>
	</target>

   <target name="make-jar">
        <copy file="log4j-${mode}.properties" tofile="${path.build}/log4j.properties" overwrite="true" failonerror="false"/>
        <copy file="log4j-${mode}.xml" tofile="${path.build}/log4j.xml" overwrite="true" failonerror="false" />
        <jar basedir="." jarfile="${path.build}/${app.name}-no-libs.jar">
            <exclude name="**/*" />
            <fileset dir="${path.classes}">
                <include name="**/*.class"/>
                <exclude name="**/*Test.class"/>
                <exclude name="**/*Test$*.class"/>
                <include name="**/res/*.*"/>
                <include name="**/resources/*.*"/>
            </fileset>
            <fileset dir="${path.build}">
                <include name="log4j.properties"/>
                <include name="log4j.xml"/>
            </fileset>
            <fileset dir=".">
                <include name="license.txt"/>
            </fileset>
            <fileset dir="." includes="${include.data.explicit}"/>
            <fileset dir=".">
                  <selector if="include.data">
                  	<or>
                      <!--
                      <filename name="data/**/*.*" />
                      -->
                      <filename name="data/datasets.xml" />
                      <filename name="data/airlines/airlines.xml.gz" />
                      <filename name="data/migrations/migrations-500.xml.gz" />
                      <filename name="data/refugees/refugees-*.xml.gz" />
                      <filename name="data/refugees/countries-areas.xml.gz" />
                    </or>
                  </selector>
            </fileset>
            <fileset dir="classes-applets">
                  <selector if="include.applet.meta-inf">
                  	<or>
                      <filename name="META-INF/**/*.*" />
                    </or>
                  </selector>
            </fileset>
        </jar>
        <delete file="${path.build}/log4j.properties" quiet="true"/>
        <delete file="${path.build}/log4j.xml" quiet="true"/>
    </target>

	<target name="add-manifest">
		<move file="${path.build}/${app.name}.jar" tofile="${path.build}/_${app.name}.jar"/>
		<jar basedir="." jarfile="${path.build}/${app.name}.jar">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}" />
            </manifest>
			<exclude name="**/*" />
			<zipgroupfileset file="${path.build}/_${app.name}.jar"/>
		</jar>
		<delete file="${path.build}/_${app.name}.jar"/>
	</target>

    <target name="sign-cert-gen">
        <exec executable="keytool">
        	<arg line="-keystore ${sign.keystore.name}"/>
            <arg line="-storepass ${sign.keystore.pass}"/>
            <arg line="-genkey -keyalg rsa  -validity 1095"/>
            <arg line="-alias ${app.name}"/>
            <arg line="-keypass ${sign.keystore.pass}"/>
            <arg line="-dname &quot;CN=Ilya Boyandin, OU=, O=University of Fribourg, L=Fribourg, C=CH&quot;"/>
        </exec>
    </target>
    
    <target name="sign">
    	<echo>Signing ${path.build}/${app.name}.jar</echo>
        <exec executable="jarsigner">
            <arg line="-keystore ${sign.keystore.name}"/>
            <arg line="-storepass ${sign.keystore.pass}"/>
            <arg line="${path.build}/${app.name}.jar"/>
            <arg line="${cert.name}"/>
        </exec>
    </target>

</project>

